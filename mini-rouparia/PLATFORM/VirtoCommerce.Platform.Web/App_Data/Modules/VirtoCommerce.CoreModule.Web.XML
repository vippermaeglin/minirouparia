<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VirtoCommerce.CoreModule.Web</name>
    </assembly>
    <members>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.EvaluateTaxes(System.String,VirtoCommerce.Domain.Tax.Model.TaxEvaluationContext)">
            <summary>
            Evaluate and return all tax rates for specified store and evaluation context 
            </summary>
            <param name="storeId"></param>
            <param name="evalContext"></param>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.GetFulfillmentCenters">
            <summary>
            Return all fulfillment centers registered in the system
            </summary>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.GetFulfillmentCenter(System.String)">
            <summary>
            Find fulfillment center by id
            </summary>
            <param name="id">fulfillment center id</param>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.UpdateFulfillmentCenter(VirtoCommerce.CoreModule.Web.Model.FulfillmentCenter)">
            <summary>
             Update a existing fulfillment center 
            </summary>
            <param name="center">fulfillment center</param>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.PostProcessPayment(VirtoCommerce.CoreModule.Web.Model.PaymentCallbackParameters)">
            <summary>
            Payment callback operation used by external payment services to inform post process payment in our system
            </summary>
            <param name="callback">payment callback parameters</param>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.BatchUpdateSeoInfos(VirtoCommerce.Domain.Commerce.Model.SeoInfo[])">
            <summary>
            Batch create or update seo infos
            </summary>
            <param name="seoInfos"></param>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.GetSeoInfoBySlug(System.String)">
            <summary>
            Find all SEO records for object by slug 
            </summary>
            <param name="slug">slug</param>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.GetAllCurrencies">
            <summary>
            Return all currencies registered in the system
            </summary>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.UpdateCurrency(VirtoCommerce.Domain.Commerce.Model.Currency)">
            <summary>
             Update a existing currency 
            </summary>
            <param name="currency">currency</param>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.CreateCurrency(VirtoCommerce.Domain.Commerce.Model.Currency)">
            <summary>
             Create new currency 
            </summary>
            <param name="currency">currency</param>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.CommerceController.DeleteCurrencies(System.String[])">
            <summary>
             Delete currencies 
            </summary>
            <param name="codes">currency codes</param>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.StorefrontSecurityController.GetUserById(System.String)">
            <summary>
            Get user details by user ID
            </summary>
            <param name="userId"></param>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.StorefrontSecurityController.GetUserByName(System.String)">
            <summary>
            Get user details by user name
            </summary>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.StorefrontSecurityController.GetUserByLogin(System.String,System.String)">
            <summary>
            Get user details by external login provider
            </summary>
            <param name="loginProvider"></param>
            <param name="providerKey"></param>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.StorefrontSecurityController.PasswordSignIn(System.String,System.String)">
            <summary>
            Sign in with user name and password
            </summary>
            <param name="userName"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.StorefrontSecurityController.Create(VirtoCommerce.Platform.Core.Security.ApplicationUserExtended)">
            <summary>
            Create a new user
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.StorefrontSecurityController.GenerateResetPasswordToken(System.String,System.String,System.String,System.String)">
            <summary>
            Generate a password reset token
            </summary>
            <remarks>
            Generates a password reset token and sends a password reset link to the user via email.
            </remarks>
            <param name="userId"></param>
            <param name="storeName"></param>
            <param name="language"></param>
            <param name="callbackUrl"></param>
            <returns></returns>
        </member>
        <member name="M:VirtoCommerce.CoreModule.Web.Controllers.Api.StorefrontSecurityController.ResetPassword(System.String,System.String,System.String)">
            <summary>
            Reset a password for the user
            </summary>
            <param name="userId"></param>
            <param name="token"></param>
            <param name="newPassword"></param>
            <returns></returns>
        </member>
        <member name="P:VirtoCommerce.CoreModule.Web.Model.StorefrontUser.AllowedStores">
            <summary>
            List of stores which  user can sing in
            </summary>
        </member>
        <member name="T:VirtoCommerce.CoreModule.Web.Model.FulfillmentCenter">
            <summary>
            Represent fulfillment center information
            </summary>
        </member>
    </members>
</doc>
